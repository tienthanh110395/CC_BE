package com.viettel.etc.services.tables;import com.viettel.etc.repositories.tables.TicketProcessShareDetailRepositoryJPA;import com.viettel.etc.repositories.tables.entities.TicketEntity;import com.viettel.etc.repositories.tables.entities.TicketProcessShareDetailEntity;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.List;import java.util.Optional;/** * Autogen class: Create Service For Table Name Ticket_process_share_detail * * @author ToolGen * @date Tue Aug 31 13:50:49 ICT 2021 */@Servicepublic class TicketProcessShareDetailServiceJPA {    @Autowired    TicketProcessShareDetailRepositoryJPA ticketProcessShareDetailRepositoryJPA;    public List<TicketProcessShareDetailEntity> findAll() {        return this.ticketProcessShareDetailRepositoryJPA.findAll();    }    public TicketProcessShareDetailEntity save(TicketProcessShareDetailEntity ticketProcessShareDetailEntity) {        return this.ticketProcessShareDetailRepositoryJPA.save(ticketProcessShareDetailEntity);    }    public Optional<TicketProcessShareDetailEntity> findById(Long id) {        return this.ticketProcessShareDetailRepositoryJPA.findById(id);    }    public void deleteById(Long id) {        this.ticketProcessShareDetailRepositoryJPA.deleteById(id);    }    public TicketProcessShareDetailEntity getOne(Long id) {        return this.ticketProcessShareDetailRepositoryJPA.getOne(id);    }    public Boolean existsById(Long id) {        return this.ticketProcessShareDetailRepositoryJPA.existsById(id);    }    public List<TicketProcessShareDetailEntity> saveAll(List<TicketProcessShareDetailEntity> ticketProcessShareDetailEntities) {        return this.ticketProcessShareDetailRepositoryJPA.saveAll(ticketProcessShareDetailEntities);    }    public boolean existsByTicketIdAndProcessUserIsNotNull(List<Long> ticketIds) {        List<TicketProcessShareDetailEntity> ticketProcessShareDetailEntities = ticketProcessShareDetailRepositoryJPA.findAllByTicketIdInAndProcessUserIsNotNull(ticketIds);        return ticketProcessShareDetailEntities == null || ticketProcessShareDetailEntities.isEmpty();    }    public Long getNextValSequenceSerial(){        return ticketProcessShareDetailRepositoryJPA.getNextValSequenceSerial();    }}